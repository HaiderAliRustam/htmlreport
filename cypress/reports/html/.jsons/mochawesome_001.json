{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2023-01-23T11:32:52.403Z",
    "end": "2023-01-23T11:32:53.466Z",
    "duration": 1063,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7c48a7c5-7a8d-4c08-a2fd-060e4d523378",
      "title": "",
      "fullFile": "cypress\\e2e\\API.cy.js",
      "file": "cypress\\e2e\\API.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7a3a1da3-396d-4a79-b966-ec371262aaf6",
          "title": "API Scries Test Suit",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Multiple API",
              "fullTitle": "API Scries Test Suit Multiple API",
              "timedOut": null,
              "duration": 1048,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://reqres.in/api/users?\",\n  qs: {\n    page: 1\n  }\n}).then(rep => {\n  cy.log(rep.body.data[5].first_name);\n  // cy.log(rep.body.data.first_name)\n  const dummyName = rep.body.data[5].first_name;\n  cy.log(dummyName);\n  return dummyName;\n}).then(dummyName => {\n  //  cy.log(\"This Name is Gererated from the First Api\" + dummyName)\n  cy.request({\n    method: \"POST\",\n    url: \"https://reqres.in/api/register\",\n    body: {\n      \"name\": dummyName,\n      \"job\": \"leader\"\n    }\n  }).then(reps => {\n    cy.log(reps);\n  });\n});",
              "err": {
                "message": "TypeError: The \"path\" argument must be of type string. Received type boolean (false)",
                "estack": "TypeError: The \"path\" argument must be of type string. Received type boolean (false)\nTypeError [ERR_INVALID_ARG_TYPE]: The \"path\" argument must be of type string. Received type boolean (false)\n    at new NodeError (node:internal/errors:372:5)\n    at validateString (node:internal/validators:120:11)\n    at Object.join (node:path:429:7)\n    at B (<embedded>:4494:295206)\n    at <embedded>:4494:297086\n    at Object.save (<embedded>:4494:297107)\n    at <embedded>:4494:298265\n    at tryCatcher (C:\\Users\\2017c\\AppData\\Local\\Cypress\\Cache\\12.3.0\\Cypress\\resources\\app\\node_modules\\bluebird\\js\\release\\util.js:16:23)\n    at Promise._settlePromiseFromHandler (C:\\Users\\2017c\\AppData\\Local\\Cypress\\Cache\\12.3.0\\Cypress\\resources\\app\\node_modules\\bluebird\\js\\release\\promise.js:512:31)\n    at Promise._settlePromise (C:\\Users\\2017c\\AppData\\Local\\Cypress\\Cache\\12.3.0\\Cypress\\resources\\app\\node_modules\\bluebird\\js\\release\\promise.js:569:18)\n    at Promise._settlePromise0 (C:\\Users\\2017c\\AppData\\Local\\Cypress\\Cache\\12.3.0\\Cypress\\resources\\app\\node_modules\\bluebird\\js\\release\\promise.js:614:10)\n    at Promise._settlePromises (C:\\Users\\2017c\\AppData\\Local\\Cypress\\Cache\\12.3.0\\Cypress\\resources\\app\\node_modules\\bluebird\\js\\release\\promise.js:694:18)\n    at _drainQueueStep (C:\\Users\\2017c\\AppData\\Local\\Cypress\\Cache\\12.3.0\\Cypress\\resources\\app\\node_modules\\bluebird\\js\\release\\async.js:138:12)\n    at _drainQueue (C:\\Users\\2017c\\AppData\\Local\\Cypress\\Cache\\12.3.0\\Cypress\\resources\\app\\node_modules\\bluebird\\js\\release\\async.js:131:9)\n    at Async._drainQueues (C:\\Users\\2017c\\AppData\\Local\\Cypress\\Cache\\12.3.0\\Cypress\\resources\\app\\node_modules\\bluebird\\js\\release\\async.js:147:5)\n    at Immediate._onImmediate (C:\\Users\\2017c\\AppData\\Local\\Cypress\\Cache\\12.3.0\\Cypress\\resources\\app\\node_modules\\bluebird\\js\\release\\async.js:17:14)\n    at process.processImmediate (node:internal/timers:466:21)",
                "diff": null
              },
              "uuid": "5d852782-bc31-45a8-9dfa-8d2dd5d671d2",
              "parentUUID": "7a3a1da3-396d-4a79-b966-ec371262aaf6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5d852782-bc31-45a8-9dfa-8d2dd5d671d2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1048,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "Haider-Report",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "showPassed": false,
        "saveAllAttempts": false,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}